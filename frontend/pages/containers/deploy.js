import { useState } from "react";
import Head from "next/head";

import Stepper from "@/components/Stepper";
import StepperControl from "@/components/StepperControl";
import { UseContextProvider } from "@/contexts/StepperContext";

import General from "@/components/steps/General";
import Networking from "@/components/steps/Networking";
import Volumes from "@/components/steps/Volumes";

const Application = () => {
  const [currentStep, setCurrentStep] = useState(1);

  const steps = ["General", "Networking", "Volumes"];

  const displayStep = (step) => {
    switch (step) {
      case 1:
        return <General />;
      case 2:
        return <Networking />;
      case 3:
        return <Volumes />;
      default:
    }
  };

  const handleClick = (direction) => {
    let newStep = currentStep;

    direction === "next" ? newStep++ : newStep--;
    newStep > 0 && newStep <= steps.length && setCurrentStep(newStep);
  };
  return (
    <>
      <Head>
        <title>Containers / Deploy</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/favicon/favicon-16x16.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/favicon/favicon-32x32.png"
        />
        <link
          rel="apple-touch-icon"
          sizes="180x180"
          href="/favicon/apple-touch-icon.png"
        />
      </Head>
      <main className="bg-dark text-light h-[90vh] p-4">
        <div className="rounded-2xl pb-2 mx-[10rem]">
          <div className="horizontal container pt-2">
            <Stepper steps={steps} currentStep={currentStep} />
            <div className="my-10 p-10">
              <UseContextProvider>
                {displayStep(currentStep)}
              </UseContextProvider>
            </div>
          </div>
          {currentStep !== steps.length && (
            <StepperControl
              handleClick={handleClick}
              currentStep={currentStep}
              steps={steps}
            />
          )}
        </div>
      </main>
    </>
  );
};

export const getServerSideProps = async (ctx) => {
  return {
    props: { heading: "Containers / Deploy" },
  };
};

export default Application;
